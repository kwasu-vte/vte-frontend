{
    "openapi": "3.1.0",
    "info": {
        "title": "Kwasu VTE",
        "version": "0.0.1",
        "description": "API documentation for managing Kwara State University Vocational Training System"
    },
    "servers": [
        {
            "url": "https://timadey.alwaysdata.net/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/v1/academic-sessions": {
            "get": {
                "operationId": "academicSession.index",
                "description": "Retrieves a list of all academic sessions including both active and inactive ones.\nThe response includes session details such as name, start/end dates, and active status.",
                "summary": "Get all academic sessions",
                "tags": [
                    "AcademicSession"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "All session fetched successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AcademicSessionResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "academicSession.store",
                "description": "Creates a new academic session with the provided details. The session will be\ncreated in an inactive state by default.\n\nEnsure academic session dates are in the future i.e. after today.",
                "summary": "Create a new academic session",
                "tags": [
                    "AcademicSession"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "starts_at": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "ends_at": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Academic session created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcademicSessionResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/academic-sessions/{academicSession}/start": {
            "post": {
                "operationId": "academicSession.start",
                "description": "Activates the specified academic session and automatically deactivates any\ncurrently active session.\n\n- An academic session expires when it's end date is already less than or equal to today",
                "summary": "Start an academic session",
                "tags": [
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "academicSession",
                        "in": "path",
                        "required": true,
                        "description": "The academic session ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Academic session started successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcademicSessionResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/academic-sessions/{academicSession}/end": {
            "post": {
                "operationId": "academicSession.end",
                "description": "Deactivates the specified academic session. Only currently active sessions can be ended.",
                "summary": "End an academic session",
                "tags": [
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "academicSession",
                        "in": "path",
                        "required": true,
                        "description": "The academic session ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Academic session ended successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcademicSessionResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/academic-sessions/{academicSession}": {
            "patch": {
                "operationId": "academicSession.update",
                "summary": "Update an academic session",
                "tags": [
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "academicSession",
                        "in": "path",
                        "required": true,
                        "description": "The academic session ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "starts_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "ends_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Academic session updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcademicSessionResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/users/{user}/enrollment": {
            "post": {
                "operationId": "enroll-for-skill",
                "description": "Enroll a student user for a particular skill in the current active session.\nThere must be an active academic session and it's must still be valid (not expired)\n\n**Enrollment Status**",
                "summary": "Skill Enrollment",
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "skill_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The skill the student wants to enroll for"
                                    }
                                },
                                "required": [
                                    "skill_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EnrollmentResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "get-user-enrollment",
                "description": "Get the enrollment made for this particular student",
                "summary": "Get student enrollment",
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Enrollment retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/EnrollmentResource"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/users/{user}/enrollment/pay": {
            "post": {
                "operationId": "enroll-and-pay",
                "description": "- If the `enrollment id` is null (null, not 0) the system will automatically check if there is an existing enrollment for the user,\n- if none, it enrolls the student in a random skill that their level can take\n- Creates a payment record for the enrollment  and returns payment details including the payment gateway URL.",
                "summary": "Pay for Enrollment v2",
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enrollment_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string"
                                                },
                                                "reference": {
                                                    "type": "string"
                                                },
                                                "payment_url": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "gateway": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "payment_id",
                                                "reference",
                                                "payment_url",
                                                "amount",
                                                "currency",
                                                "gateway"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/enrollments": {
            "get": {
                "operationId": "get-session-enrollments",
                "description": "`Admin:` Get all enrollments made for a particular academic session and/or skill including\nsome details of the student and the skill.\n\n- If no `academic_session_id` is specified, the current active session will be used.\n- If no `skill_id` is specified, all skill enrollments during that session will be included.\n- Results are paginated.",
                "summary": "Get session enrollments",
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "academic_session_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "skill_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "The number of items per page for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EnrollmentResource"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "from": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "from",
                                                        "last_page",
                                                        "path",
                                                        "per_page",
                                                        "to",
                                                        "total"
                                                    ]
                                                },
                                                "links": {
                                                    "type": "object",
                                                    "properties": {
                                                        "first": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "last": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "prev": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "next": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "first",
                                                        "last",
                                                        "prev",
                                                        "next"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "meta",
                                                "links"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/enrollments/{enrollmentId}": {
            "get": {
                "operationId": "get-enrollment-by-id",
                "description": "`Admin:` Get a comprehensive detail about a particular enrollment using it's ID",
                "summary": "Get enrollment by ID",
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Enrollment retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EnrollmentResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "integer",
                                            "enum": [
                                                404
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/enrollments/{enrollment}/pay": {
            "get": {
                "operationId": "pay-for-enrollment",
                "description": "\n\n`Strictly Owner:` Initiate payment for a particular enrollment using the enrollment ID.\n- Creates a payment record and returns payment details including the payment gateway URL.\n- Only the owner of the enrollment can initiate this request.",
                "summary": "Pay for enrollment",
                "deprecated": true,
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "name": "enrollment",
                        "in": "path",
                        "required": true,
                        "description": "The enrollment ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string"
                                                },
                                                "reference": {
                                                    "type": "string"
                                                },
                                                "payment_url": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "gateway": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "payment_id",
                                                "reference",
                                                "payment_url",
                                                "amount",
                                                "currency",
                                                "gateway"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "description": "An error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": "Payment can only be initiated by the owner of this enrollment"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/qr-codes/groups/{group}/generate": {
            "post": {
                "operationId": "qr-codes.generate-group",
                "description": "This endpoint handles QR code generation for a given `SkillGroup`.\n- If the quantity is small (≤ 5), QR codes are generated synchronously and returned immediately.\n- If the quantity is large (> 5), the generation is queued as a background job and a `job_id` is returned,\n  allowing the frontend to poll for completion or notify the user later.\n- An email will be sent to notify the job creator of the job completion.",
                "summary": "Generate QR codes for a specific skill group",
                "tags": [
                    "GroupQrCode"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "\n        The skill group for which the QR codes are being generated.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateGroupQrCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "QR codes generated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GroupQrCodeBatchResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "QR code generation queued"
                                            ]
                                        },
                                        "estimated_completion": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "estimated_completion"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/qr-codes/bulk-generate": {
            "post": {
                "operationId": "qr-codes.bulk-generate",
                "description": "This endpoint queues a job that generates QR codes in bulk for every group\nunder the specified skill. It is designed for heavy operations and will\nalways run asynchronously in the background.",
                "summary": "Bulk generate QR codes for all groups in a given skill",
                "tags": [
                    "GroupQrCode"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkGenerateQrCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Bulk QR code generation queued"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "estimated_completion": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "required": [
                                                "estimated_completion"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/qr-codes/scan-history/{qrToken}": {
            "get": {
                "operationId": "qr-codes.scan-history",
                "summary": "Get scan history for a QR code",
                "tags": [
                    "GroupQrCode"
                ],
                "parameters": [
                    {
                        "name": "qrToken",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "QR code scans retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "qr_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "token": {
                                                            "type": "string"
                                                        },
                                                        "skill_title": {
                                                            "type": "string"
                                                        },
                                                        "group_number": {
                                                            "type": "string"
                                                        },
                                                        "mark_value": {
                                                            "type": "string"
                                                        },
                                                        "expires_at": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "token",
                                                        "skill_title",
                                                        "group_number",
                                                        "mark_value",
                                                        "expires_at"
                                                    ]
                                                },
                                                "scans": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AttendanceResource"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "qr_info",
                                                "scans"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/qr-codes/groups/{group}/attendance-report": {
            "get": {
                "operationId": "qr-codes.attendance-report",
                "description": "`Mentor or Admin` Endpoint to generate attendance report for a specific group.",
                "summary": "Get attendance report for a group",
                "tags": [
                    "GroupQrCode"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "The group ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Report generated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "group_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "group_number": {
                                                            "type": "integer"
                                                        },
                                                        "skill_title": {
                                                            "type": "string"
                                                        },
                                                        "practical_date": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "format": "date-time"
                                                        },
                                                        "total_enrolled": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "group_number",
                                                        "skill_title",
                                                        "practical_date",
                                                        "total_enrolled"
                                                    ]
                                                },
                                                "students": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "group_info",
                                                "students"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/qr-codes/groups/{group}/list": {
            "get": {
                "operationId": "qr-codes.list-group",
                "description": "`Mentor or Admin` endpoint to list QR codes for a specific group.",
                "summary": "List QR codes for a group with pagination",
                "tags": [
                    "GroupQrCode"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "The group ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "expired",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/GroupQrCodeResource"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "from": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "from",
                                                        "last_page",
                                                        "path",
                                                        "per_page",
                                                        "to",
                                                        "total"
                                                    ]
                                                },
                                                "links": {
                                                    "type": "object",
                                                    "properties": {
                                                        "first": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "last": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "prev": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "next": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "first",
                                                        "last",
                                                        "prev",
                                                        "next"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "meta",
                                                "links"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/attendance/scan": {
            "post": {
                "operationId": "attendance.scan",
                "description": "This endpoint processes a scanned QR code and records attendance for a student.\n\n- Verifies the QR code exists and is not expired.\n- Confirms the student is enrolled in the relevant skill group.\n- Prevents duplicate attendance for the same day.\n- Records attendance and awards the associated mark value.",
                "summary": "Process QR Code Scan for Attendance",
                "tags": [
                    "GroupQrCode"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessQrScanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "QR Code Processed Successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "QR code attendance recorded"
                                                            ]
                                                        },
                                                        "attendance_id": {
                                                            "type": "string"
                                                        },
                                                        "points_awarded": {
                                                            "type": "string"
                                                        },
                                                        "scanned_at": {
                                                            "type": "string"
                                                        },
                                                        "skill_title": {
                                                            "type": "string"
                                                        },
                                                        "group_number": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "success",
                                                        "message",
                                                        "attendance_id",
                                                        "points_awarded",
                                                        "scanned_at",
                                                        "skill_title",
                                                        "group_number"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Attendance already recorded for today"
                                                            ]
                                                        },
                                                        "error": {
                                                            "type": "string",
                                                            "enum": [
                                                                "DUPLICATE_ATTENDANCE"
                                                            ]
                                                        },
                                                        "existing_attendance": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "scanned_at": {
                                                                    "type": "string"
                                                                },
                                                                "points_awarded": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "id",
                                                                "scanned_at",
                                                                "points_awarded"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "success",
                                                        "message",
                                                        "error",
                                                        "existing_attendance"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Student not enrolled in this group"
                                                            ]
                                                        },
                                                        "error": {
                                                            "type": "string",
                                                            "enum": [
                                                                "NOT_ENROLLED"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "success",
                                                        "message",
                                                        "error"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "QR code has expired"
                                                            ]
                                                        },
                                                        "error": {
                                                            "type": "string",
                                                            "enum": [
                                                                "EXPIRED_QR"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "success",
                                                        "message",
                                                        "error"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Invalid QR code"
                                                            ]
                                                        },
                                                        "error": {
                                                            "type": "string",
                                                            "enum": [
                                                                "INVALID_QR"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "success",
                                                        "message",
                                                        "error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/{user}/mentors": {
            "get": {
                "operationId": "get-mentor-profile",
                "summary": "Get mentor profile details",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Mentor Profile Details Fetched Successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MentorProfileResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Mentor profile not found"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "integer",
                                                    "enum": [
                                                        404
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/{user}/mentors/get-assigned-skills": {
            "get": {
                "operationId": "get-assigned-skills",
                "summary": "Get skills assigned to a mentor",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Assigned Skills Retrieved Successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SkillResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Mentor profile not found"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "integer",
                                                    "enum": [
                                                        404
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/{user}/mentors/get-skill-groups": {
            "get": {
                "operationId": "get-skill-groups",
                "summary": "Get skill groups for mentor's assigned skills",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill Groups Retrieved Successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SkillGroupResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Mentor profile not found"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "integer",
                                                    "enum": [
                                                        404
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/mentors": {
            "post": {
                "operationId": "create-mentor-profile",
                "description": "`Admin`: creates a new mentor profile. The mentor will receive an email containing their login details.",
                "summary": "Create a new Mentor in the system",
                "tags": [
                    "MentorProfile"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MentorProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Mentor Profile Created Successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "string"
                                                },
                                                "profile": {
                                                    "$ref": "#/components/schemas/MentorProfileResource"
                                                }
                                            },
                                            "required": [
                                                "user",
                                                "profile"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "get-all-mentors",
                "description": "`Admin`: retrieves all mentor profiles with pagination and filtering",
                "summary": "Get all mentors in the system",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialization",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_available",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Mentors Retrieved Successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MentorProfileResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/mentors/{mentorProfile}/assign-skill": {
            "post": {
                "operationId": "assign-skill",
                "description": "`Admin`: assigns a mentor to a specific skill",
                "summary": "Assign a mentor to a skill",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "mentorProfile",
                        "in": "path",
                        "required": true,
                        "description": "The mentor profile ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignSkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Mentor Successfully Assigned to Skill"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillMentor"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/mentors/{mentorProfile}/remove-skill": {
            "post": {
                "operationId": "remove-skill",
                "description": "`Admin`: removes a mentor from a specific skill",
                "summary": "Remove mentor from a skill",
                "tags": [
                    "MentorProfile"
                ],
                "parameters": [
                    {
                        "name": "mentorProfile",
                        "in": "path",
                        "required": true,
                        "description": "The mentor profile ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Mentor Successfully Removed from Skill"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Mentor is not assigned to this skill"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "integer",
                                                    "enum": [
                                                        404
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skills": {
            "get": {
                "operationId": "skills.index",
                "description": "Retrieves a paginated list of all available skills in the system.\nEach skill includes enrollment and group counts when available.",
                "summary": "Get all skills",
                "tags": [
                    "Skill"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "from": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "from",
                                                        "last_page",
                                                        "path",
                                                        "per_page",
                                                        "to",
                                                        "total"
                                                    ]
                                                },
                                                "links": {
                                                    "type": "object",
                                                    "properties": {
                                                        "first": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "last": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "prev": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "next": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "first",
                                                        "last",
                                                        "prev",
                                                        "next"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "meta",
                                                "links"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "skills.store",
                "description": "Creates a new skill with the provided configuration. Skills can have various\nrestrictions including student group limits, date ranges, weekend exclusions,\nand level-based access control.",
                "summary": "Create a new skill",
                "tags": [
                    "Skill"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skills/{skill}": {
            "get": {
                "operationId": "skills.show",
                "description": "Retrieves detailed information about a specific skill by its ID.\nIncludes all skill configuration, metadata, and related counts.",
                "summary": "Get a specific skill",
                "tags": [
                    "Skill"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "patch": {
                "operationId": "skills.update",
                "description": "Updates an existing skill with new configuration data. All fields are optional\nand only provided fields will be updated. The skill's groups and enrollments\nmay be affected by certain configuration changes.",
                "summary": "Update an existing skill",
                "tags": [
                    "Skill"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "skills.destroy",
                "description": "Permanently deletes a skill from the system. This action cannot be undone.\nAll associated groups and enrollments will also be removed. Use with caution.",
                "summary": "Delete a skill",
                "tags": [
                    "Skill"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/skills/{skill}/date-range": {
            "post": {
                "operationId": "skills.updateDateRange",
                "description": "In the **current academic session**, update a particular range at which this skill\nwill be holding practicals. The date range must be between the range of dates of the\nacademic session and must be after today. Note that practical dates will be assigned\nto group from the skill date range.",
                "summary": "Update Skill Date Range",
                "tags": [
                    "Skill"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date_range_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date when this skill will start practicals (in the current academic session)"
                                    },
                                    "date_range_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date when this skill will end practicals"
                                    }
                                },
                                "required": [
                                    "date_range_start",
                                    "date_range_end"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "type": "object"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SkillDateRange"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "skills.getDateRange",
                "description": "Get the date range for this skill in the current academic session\nYou may optionally provide the academic session id if you want to get for another academic session\nelse the system will automatically get for the current session.",
                "summary": "Get Skill Date Range",
                "tags": [
                    "Skill"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "academic-session",
                        "in": "query",
                        "description": "The practical date range for this skill in this academic session id.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill date range retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/SkillDateRange"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/skill-groups": {
            "get": {
                "operationId": "skill-groups.index",
                "description": "`Admin`: Retrieves a paginated list of all skill groups, optionally filtered by skill,\nacademic session, or other criteria. Includes student counts and status information.",
                "summary": "Get all skill groups",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skill_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "academic_session_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "has_capacity",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill groups retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "type": "string"
                                                },
                                                "links": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "meta",
                                                "links"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "skill-groups.store",
                "description": "`Admin`: Creates a new skill group for a specific skill and academic session.\nAutomatically generates group number and initializes practical dates if applicable.",
                "summary": "Create a new skill group",
                "tags": [
                    "SkillGroup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSkillGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill group created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillGroupResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skill-groups/{skillGroup}": {
            "get": {
                "operationId": "skill-groups.show",
                "description": "`Admin`: Retrieves detailed information about a specific skill group including\nall enrolled students, practical schedules, and capacity information.",
                "summary": "Get a specific skill group",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skillGroup",
                        "in": "path",
                        "required": true,
                        "description": "The skill group ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill group retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SkillGroupResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "delete": {
                "operationId": "skill-groups.destroy",
                "description": "`Admin`: Permanently deletes a skill group. All enrolled students will be unassigned\nand may need to be reassigned to other groups. Use with caution. ⚠️",
                "summary": "Delete a skill group",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skillGroup",
                        "in": "path",
                        "required": true,
                        "description": "The skill group ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/skill-groups/{skillGroup}/assign-student": {
            "post": {
                "operationId": "skill-groups.assign-student",
                "description": "`Admin`: Manually assigns a specific student (enrollment) to this skill group.\nThe student must have paid status and not already be assigned to a group.",
                "summary": "Assign student to group",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skillGroup",
                        "in": "path",
                        "required": true,
                        "description": "The skill group ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignStudentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Student assigned to group successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "group": {
                                                    "$ref": "#/components/schemas/SkillGroupResource"
                                                },
                                                "enrollment_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "group",
                                                "enrollment_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skill-groups/{skillGroup}/remove-student": {
            "delete": {
                "operationId": "skill-groups.remove-student",
                "description": "`Admin`: Removes a student from this skill group, changing their enrollment status\nback to PAID and making them available for reassignment.",
                "summary": "Remove student from a group",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skillGroup",
                        "in": "path",
                        "required": true,
                        "description": "The skill group ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "enrollment_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Student removed from group successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "group": {
                                                    "$ref": "#/components/schemas/SkillGroupResource"
                                                },
                                                "enrollment_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "group",
                                                "enrollment_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skill-groups/statistics/overview": {
            "get": {
                "operationId": "skill-groups.statistics",
                "description": "Provides statistical overview of skill groups including capacity utilization,\ndistribution metrics, and assignment status summaries.",
                "summary": "Get group statistics",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skill_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "academic_session_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Group statistics retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_groups": {
                                                    "type": "string"
                                                },
                                                "total_students": {
                                                    "type": "string"
                                                },
                                                "average_students_per_group": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "average_utilization": {
                                                    "type": "string"
                                                },
                                                "full_groups": {
                                                    "type": "string"
                                                },
                                                "empty_groups": {
                                                    "type": "string"
                                                },
                                                "groups_with_capacity": {
                                                    "type": "string"
                                                },
                                                "utilization_distribution": {
                                                    "type": "object",
                                                    "properties": {
                                                        "0-25%": {
                                                            "type": "string"
                                                        },
                                                        "26-50%": {
                                                            "type": "string"
                                                        },
                                                        "51-75%": {
                                                            "type": "string"
                                                        },
                                                        "76-99%": {
                                                            "type": "string"
                                                        },
                                                        "100%": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "0-25%",
                                                        "26-50%",
                                                        "51-75%",
                                                        "76-99%",
                                                        "100%"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "total_groups",
                                                "total_students",
                                                "average_students_per_group",
                                                "average_utilization",
                                                "full_groups",
                                                "empty_groups",
                                                "groups_with_capacity",
                                                "utilization_distribution"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skills/{skill}/groups": {
            "get": {
                "operationId": "skills.groups.index",
                "description": "Retrieves all groups for a specific skill, optionally filtered by academic session.\nUseful for displaying skill-specific group management interfaces.",
                "summary": "Get groups by skill",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "academic_session_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_full",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Skill groups retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SkillGroupResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/skills/{skill}/groups/auto-assign": {
            "post": {
                "operationId": "skills.groups.auto-assign",
                "description": "Automatically assigns all unassigned paid students for a skill to groups\nusing the specified algorithm (fill_sequentially).\nA cron Job already does this now and then.",
                "summary": "Auto-assign students to groups",
                "tags": [
                    "SkillGroup"
                ],
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "description": "The skill ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "academic_session_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "academic_session_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Students auto-assigned successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "assigned_count": {
                                                    "type": "string"
                                                },
                                                "created_groups": {
                                                    "type": "string"
                                                },
                                                "failed_assignments": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "assigned_count",
                                                "created_groups",
                                                "failed_assignments"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/users/{user}/student": {
            "post": {
                "operationId": "students.createProfile",
                "description": "Create a new student profile for the user.\n- If the authenticated user is not an admin, then the `user` id in the param must belong to the authenticated user.\n- The `user` id must also belong to a student (a user with the student role)\n- ⚠️ Only admins can update certain field after creation including; department, faculty, matric number\nTherefore, students are advised to open their eyes when creating their profile",
                "summary": "Create a new student profile",
                "tags": [
                    "StudentProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user id of the user you want to create a student profile for",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Student profile created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StudentProfileResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "students.getProfile",
                "description": "Get the current authenticated user's student profile.",
                "summary": "Get student profile",
                "tags": [
                    "StudentProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Student profile retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StudentProfileResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/users/{user}/student/available-skills": {
            "get": {
                "operationId": "students.getAvailableSkills",
                "description": "Get the available skills this student can register for based on their level and as set by admin",
                "summary": "Get available skills",
                "tags": [
                    "StudentProfile"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Here are the skills you can enroll for"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SkillResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/users/students": {
            "get": {
                "operationId": "students.allStudents",
                "description": "Get the list of all student on the system",
                "summary": "Get all students",
                "tags": [
                    "StudentProfile"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StudentProfileResource"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "from": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "from",
                                                        "last_page",
                                                        "path",
                                                        "per_page",
                                                        "to",
                                                        "total"
                                                    ]
                                                },
                                                "links": {
                                                    "type": "object",
                                                    "properties": {
                                                        "first": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "last": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "prev": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "next": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "first",
                                                        "last",
                                                        "prev",
                                                        "next"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "meta",
                                                "links"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/users/auth/login": {
            "post": {
                "operationId": "user.login",
                "summary": "Get a JWT via given credentials",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 100
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token refreshed!"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "bearer"
                                                    ]
                                                },
                                                "expires_in": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "access_token",
                                                "token_type",
                                                "expires_in"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid credentials"
                                            ]
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Unauthorized"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/v1/users/auth/register": {
            "post": {
                "operationId": "user.register",
                "description": "This endpoint is used to register a new student.\nThe `student` role will be assigned to the user registered.",
                "summary": "Register a new student",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 100
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 100
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 100
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 6
                                    }
                                },
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/v1/users/auth/refresh": {
            "post": {
                "operationId": "user.refresh",
                "summary": "Refresh a token",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token refreshed!"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "bearer"
                                                    ]
                                                },
                                                "expires_in": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "access_token",
                                                "token_type",
                                                "expires_in"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/auth/logout": {
            "post": {
                "operationId": "user.logout",
                "summary": "Log the user out (Invalidate the token)",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Successfully logged out"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/users/auth/me": {
            "get": {
                "operationId": "user.me",
                "summary": "Get the authenticated User",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "See you!"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "AcademicSessionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "starts_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "ends_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "groups_count": {
                        "type": "integer",
                        "description": "Include groups count if relationship is loaded"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "starts_at",
                    "ends_at",
                    "active",
                    "created_at",
                    "updated_at"
                ],
                "title": "AcademicSessionResource"
            },
            "AllowedLevels": {
                "type": "string",
                "enum": [
                    "100",
                    "200",
                    "300",
                    "400",
                    "500"
                ],
                "title": "AllowedLevels"
            },
            "AssignSkillRequest": {
                "type": "object",
                "properties": {
                    "skill_id": {
                        "type": "string"
                    },
                    "is_primary": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "skill_id"
                ],
                "title": "AssignSkillRequest"
            },
            "AssignStudentRequest": {
                "type": "object",
                "properties": {
                    "enrollment_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enrollment_id"
                ],
                "title": "AssignStudentRequest"
            },
            "AttendanceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "scanned_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recorded_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "points_awarded": {
                        "type": "integer"
                    },
                    "source": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "enrollment": {
                        "$ref": "#/components/schemas/EnrollmentResource"
                    },
                    "student": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "required": [
                    "id",
                    "scanned_at",
                    "recorded_by",
                    "points_awarded",
                    "source",
                    "meta",
                    "created_at",
                    "updated_at"
                ],
                "title": "AttendanceResource"
            },
            "BulkGenerateQrCodeRequest": {
                "type": "object",
                "properties": {
                    "skill_id": {
                        "type": "string"
                    },
                    "mark_value": {
                        "type": "integer",
                        "description": "Number of marks awarded for each scan. Default: 10. (optional)",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "codes_per_group": {
                        "type": "integer",
                        "description": "Number of QR codes to generate per group. Default: 1, Max: 10. (optional)",
                        "minimum": 1,
                        "maximum": 10
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 timestamp when the QR codes should expire. (optional)"
                    }
                },
                "required": [
                    "skill_id"
                ],
                "title": "BulkGenerateQrCodeRequest"
            },
            "CreateSkillGroupRequest": {
                "type": "object",
                "properties": {
                    "skill_id": {
                        "type": "integer"
                    },
                    "academic_session_id": {
                        "type": "integer"
                    },
                    "group_number": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "skill_id",
                    "academic_session_id"
                ],
                "title": "CreateSkillGroupRequest"
            },
            "EnrollmentResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "skill_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "academic_session_id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending_payment",
                            "paid",
                            "assigned",
                            "cancelled"
                        ]
                    },
                    "payment_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "failed"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "skill": {
                        "$ref": "#/components/schemas/SkillResource"
                    },
                    "academic_session": {
                        "$ref": "#/components/schemas/AcademicSessionResource"
                    },
                    "group": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "group_number": {
                                "type": "string"
                            },
                            "group_display_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "group_number",
                            "group_display_name"
                        ]
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "skill_id",
                    "academic_session_id",
                    "status",
                    "payment_status",
                    "created_at",
                    "updated_at"
                ],
                "title": "EnrollmentResource"
            },
            "GenerateGroupQrCodeRequest": {
                "type": "object",
                "properties": {
                    "mark_value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 50
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "quantity"
                ],
                "title": "GenerateGroupQrCodeRequest"
            },
            "GroupQrCodeBatchResource": {
                "type": "object",
                "properties": {
                    "batch_id": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupQrCodeResource"
                        }
                    }
                },
                "required": [
                    "batch_id",
                    "group_id",
                    "quantity",
                    "codes"
                ],
                "title": "GroupQrCodeBatchResource"
            },
            "GroupQrCodeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "skill_group_id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "mark_value": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "skill_group_id",
                    "token",
                    "path",
                    "mark_value",
                    "expires_at"
                ],
                "title": "GroupQrCodeResource"
            },
            "MentorProfileRequest": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "Create their account",
                        "minLength": 2,
                        "maxLength": 100
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 100
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 100
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "specialization": {
                        "type": "string",
                        "description": "Create their profile"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_available": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "meta": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "password_confirmation": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "specialization",
                    "password_confirmation"
                ],
                "title": "MentorProfileRequest"
            },
            "MentorProfileResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "specialization": {
                        "type": "string"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_available": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "total_students_mentored": {
                        "type": "integer"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "user": {
                        "description": "User information",
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    }
                                },
                                "required": [
                                    "id",
                                    "first_name",
                                    "last_name",
                                    "full_name",
                                    "email",
                                    "role",
                                    "created_at"
                                ]
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "assigned_skills": {
                        "type": "string",
                        "description": "Assigned skills, only active assignments"
                    },
                    "skill_mentorships": {
                        "type": "string",
                        "description": "Skill mentorships (more detailed relationship info) including assignments that are not active"
                    },
                    "full_name": {
                        "type": "string",
                        "description": "Computed properties"
                    },
                    "current_student_count": {
                        "type": "integer"
                    },
                    "is_available_for_assignment": {
                        "type": "boolean"
                    },
                    "statistics": {
                        "type": "object",
                        "description": "Statistics (only include if specifically requested)",
                        "properties": {
                            "assigned_skills_count": {
                                "type": "string"
                            },
                            "active_groups_count": {
                                "type": "string"
                            },
                            "current_students": {
                                "type": "integer"
                            },
                            "total_students_mentored": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "assigned_skills_count",
                            "active_groups_count",
                            "current_students",
                            "total_students_mentored"
                        ]
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "specialization",
                    "phone",
                    "is_available",
                    "is_active",
                    "total_students_mentored",
                    "meta",
                    "created_at",
                    "updated_at",
                    "user",
                    "full_name",
                    "is_available_for_assignment"
                ],
                "title": "MentorProfileResource"
            },
            "ProcessQrScanRequest": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    "student_id": {
                        "type": "string",
                        "description": "UUID format"
                    },
                    "device_info": {
                        "type": "object",
                        "description": "'scanned_by' => 'sometimes|string|exists:users,id',",
                        "properties": {
                            "device_id": {
                                "type": "string"
                            },
                            "platform": {
                                "type": "string",
                                "enum": [
                                    "ios",
                                    "android",
                                    "web"
                                ]
                            },
                            "app_version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "token",
                    "student_id"
                ],
                "title": "ProcessQrScanRequest"
            },
            "RemoveSkillRequest": {
                "type": "object",
                "properties": {
                    "skill_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "skill_id"
                ],
                "title": "RemoveSkillRequest"
            },
            "Role": {
                "type": "string",
                "enum": [
                    "superadmin",
                    "admin",
                    "student",
                    "mentor"
                ],
                "title": "Role"
            },
            "SkillDateRange": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "skill_id": {
                        "type": "string"
                    },
                    "academic_session_id": {
                        "type": "integer"
                    },
                    "date_range_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date_range_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "skill_id",
                    "academic_session_id",
                    "date_range_start",
                    "date_range_end",
                    "created_at",
                    "updated_at"
                ],
                "title": "SkillDateRange"
            },
            "SkillGroupResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "group_number": {
                        "type": "string"
                    },
                    "current_student_count": {
                        "type": "string"
                    },
                    "max_student_capacity": {
                        "type": "string"
                    },
                    "capacity_percentage": {
                        "type": "number"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "skill": {
                        "type": "string",
                        "description": "Relationships"
                    },
                    "academic_session": {
                        "type": "string"
                    },
                    "enrollments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentResource"
                        },
                        "description": "Students accessed via enrollments relationship"
                    },
                    "practical_dates": {
                        "type": "string"
                    },
                    "is_full": {
                        "type": "boolean",
                        "description": "Computed fields"
                    },
                    "has_capacity": {
                        "type": "boolean"
                    },
                    "capacity_remaining": {
                        "type": "integer"
                    },
                    "group_display_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "group_number",
                    "current_student_count",
                    "max_student_capacity",
                    "capacity_percentage",
                    "created_at",
                    "updated_at",
                    "is_full",
                    "has_capacity",
                    "capacity_remaining",
                    "group_display_name"
                ],
                "title": "SkillGroupResource"
            },
            "SkillMentor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "skill_id": {
                        "type": "string"
                    },
                    "mentor_id": {
                        "type": "string"
                    },
                    "is_primary": {
                        "type": "boolean"
                    },
                    "assigned_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "skill_id",
                    "mentor_id",
                    "is_primary",
                    "assigned_at",
                    "is_active",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "SkillMentor"
            },
            "SkillRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 5,
                        "maxLength": 255
                    },
                    "max_groups": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The maximum number of groups the skill should always have",
                        "minimum": 1
                    },
                    "min_students_per_group": {
                        "type": "integer",
                        "description": "The minimum number of student that should be in a particular skill group.\nThis is the actual number student we want in the group",
                        "minimum": 1
                    },
                    "max_students_per_group": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Optionally, you can set the max number if student that should however be in a group.",
                        "minimum": 1
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_levels": {
                        "type": "array",
                        "description": "An array of the levels that are allowed to take this skills. If empty, it is assumed everyone can take it",
                        "items": {
                            "$ref": "#/components/schemas/AllowedLevels"
                        }
                    }
                },
                "required": [
                    "title",
                    "min_students_per_group",
                    "allowed_levels"
                ],
                "title": "SkillRequest"
            },
            "SkillResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "max_groups": {
                        "type": "integer"
                    },
                    "min_students_per_group": {
                        "type": "integer"
                    },
                    "max_students_per_group": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "exclude_weekends": {
                        "type": "boolean"
                    },
                    "allowed_levels": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "enrollments_count": {
                        "type": "integer",
                        "description": "sometimes not included"
                    },
                    "groups_count": {
                        "type": "integer",
                        "description": "sometimes not included"
                    },
                    "mentor_assignment": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Mentor assignment details (when loaded from mentor context)",
                        "properties": {
                            "is_primary": {
                                "type": "string"
                            },
                            "assigned_at": {
                                "type": "string"
                            },
                            "is_active": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "is_primary",
                            "assigned_at",
                            "is_active"
                        ]
                    },
                    "groups": {
                        "type": "string",
                        "description": "Groups information"
                    },
                    "mentors": {
                        "type": "string",
                        "description": "Mentors assigned to this skill"
                    },
                    "enrollment_stats": {
                        "type": "object",
                        "description": "Enrollment statistics",
                        "properties": {
                            "total_enrolled": {
                                "type": "string"
                            },
                            "total_groups": {
                                "type": "string"
                            },
                            "active_mentors_count": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "total_enrolled",
                            "total_groups",
                            "active_mentors_count"
                        ]
                    }
                },
                "required": [
                    "id",
                    "title",
                    "description",
                    "max_groups",
                    "min_students_per_group",
                    "max_students_per_group",
                    "exclude_weekends",
                    "allowed_levels",
                    "meta",
                    "created_at",
                    "updated_at"
                ],
                "title": "SkillResource"
            },
            "StudentProfileRequest": {
                "type": "object",
                "properties": {
                    "matric_number": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 16
                    },
                    "student_level": {
                        "$ref": "#/components/schemas/AllowedLevels"
                    },
                    "department": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 255
                    },
                    "faculty": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 255
                    },
                    "phone": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "meta": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "matric_number",
                    "student_level",
                    "department",
                    "faculty",
                    "phone",
                    "gender"
                ],
                "title": "StudentProfileRequest"
            },
            "StudentProfileResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "matric_number": {
                        "type": "string"
                    },
                    "student_level": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "faculty": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "can_enroll": {
                        "type": "boolean"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "student_level_int": {
                        "type": "string"
                    },
                    "attendances_count": {
                        "type": "string"
                    },
                    "enrollments_count": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "matric_number",
                    "student_level",
                    "department",
                    "faculty",
                    "phone",
                    "gender",
                    "can_enroll",
                    "meta",
                    "created_at",
                    "updated_at",
                    "full_name",
                    "student_level_int",
                    "attendances_count",
                    "enrollments_count",
                    "user_id"
                ],
                "title": "StudentProfileResource"
            },
            "UpdateSkillRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 255
                    },
                    "max_groups": {
                        "type": "integer",
                        "description": "The maximum number of groups the skill should always have",
                        "minimum": 1
                    },
                    "min_students_per_group": {
                        "type": "integer",
                        "description": "The minimum number of student that should be in a particular skill group.\nThis is the actual number student we want in the group",
                        "minimum": 1
                    },
                    "max_students_per_group": {
                        "type": "integer",
                        "description": "Optionally, you can set the max number if student that should however be in a group.",
                        "minimum": 1
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_levels": {
                        "type": "array",
                        "description": "An array of the levels that are allowed to take this skills",
                        "items": {
                            "$ref": "#/components/schemas/AllowedLevels"
                        }
                    }
                },
                "title": "UpdateSkillRequest"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "studentProfile": {
                        "$ref": "#/components/schemas/StudentProfileResource"
                    }
                },
                "required": [
                    "id",
                    "full_name",
                    "first_name",
                    "last_name",
                    "email",
                    "role",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResource"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}